@model WebShop_FSharp.ViewModels.CatalogModels.ProductViewModel

@{ 
    ViewData["Title"] = Model.Name;
}
@using WebShop_FSharp.ViewModels.CatalogModels
@using WebShop_FSharp

<div id="all">
    <div id="content">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <!-- breadcrumb-->
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a asp-controller="Catalog" asp-action="Index">Главная</a></li>
                            @if (Model.Category != null)
                            {
                                <li class="breadcrumb-item">
                                    <a href="@Url.Action("Index", "Catalog", new {categoryId = Model.Category.Id})">@Model.Category.Name</a>
                                </li>
                            }
                            <li aria-current="page" class="breadcrumb-item active">@Model.Name</li>
                        </ol>
                    </nav>
                </div>
                <div class="col-lg-12 order-1 order-lg-2">
                    <div id="productMain" class="row">
                        <div class="col-md-6">
                            <div data-slider-id="1" class="owl-carousel shop-detail-carousel">
                                <div class="item"> <img src="@Url.Content($"~/{Model.ImagePath}")" alt="" class="img-fluid product-img"></div>
                                <div class="item"> <img src="@Url.Content($"~/{Model.ImagePath}")" alt="" class="img-fluid product-img"></div>
                                <div class="item"> <img src="@Url.Content($"~/{Model.ImagePath}")" alt="" class="img-fluid product-img"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="box">
                                <h1 class="text-center">@Model.Name</h1>
                                <p class="price mb-0">Цена: @(Model.Price)₽</p>
                                <p class="price mt-2">
                                    <del></del><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
                                        <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                                    </svg> @(Model.Rating == -1 ? "Без рейтинга" : $"{Model.Rating:#.#}")
                                </p>
                                <div id="addToBasketBtnContainer">
                                    <p class="text-center buttons">
                                        @await Component.InvokeAsync("AddToBasketBtn", new { userId = User.GetId(), productId = Model.Id })
                                    </p>
                                </div>
                            </div>
                            <div class="box">
                                <h2 class="text-center">Описание</h2>
                                <p>@Model.Description</p>
                            </div>
                            <div data-slider-id="1" class="owl-thumbs">
                                <button class="owl-thumb-item"><img src="@Url.Content($"~/{Model.ImagePath}")" alt="" class="img-fluid"></button>
                                <button class="owl-thumb-item"><img src="@Url.Content($"~/{Model.ImagePath}")" alt="" class="img-fluid"></button>
                                <button class="owl-thumb-item"><img src="@Url.Content($"~/{Model.ImagePath}")" alt="" class="img-fluid"></button>
                            </div>
                        </div>
                    </div>
                    
                    <div id="details" class="box \">
                        <ul class="nav nav-pills d-flex justify-content-center">
                            <li class="nav-item">
                                <a id="properties-tab" class="nav-link active" aria-current="page">Характеристики</a>
                            </li>
                            <li class="nav-item">
                                <a id="reviews-tab" class="nav-link">Отзывы</a>
                            </li>
                        </ul>
                        
                        <div id="product-reviews-container" class="product-reviews-container mt-3" hidden>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="box p-3">
                                    <form action="@Url.Content($"~/product/{Model.Id}/sendReview")" method="post">
                                        <div class="review-container">
                                            <textarea id="review-text" name="content" placeholder="Текст отзыва" data-val="true" data-val-required="Текст отзыва не может быть пустым"
                                            data-val-length="Текст отзыва не может содержать более 1000 символов" data-val-length-max=1000></textarea>
                                            <span class="field-validation-valid" data-valmsg-for="content" data-valmsg-replace="true"></span>
                                            <select id="review-rating" class="form-control" name="rating">
                                                @for (int i = 1; i <= 10; i++)
                                                {
                                                    <option value="@i">@i</option>
                                                }
                                            </select>
                                            <input id="review-submit" type="submit" class="btn btn-primary" value="Оставить отзыв"/>
                                        </div>
                                    </form>
                                </div>
                            }
                            <input type="hidden" id="review-total-pages" value="@Model.ReviewsTotalPages"/>
                            <input type="hidden" id="product-id" value="@Model.Id"/>
                            
                            <div id="reviews-container">
                                
                            </div>
                            
                            <div id="reviews-pagination-bar">
                                
                            </div>
                        </div>

                        <div id="product-details-container" class="product-details-container">
                            <div class="mt-5 properties">
                                @foreach (var property in Model.Properties)
                                {
                                    <div class="property-row">
                                        <div class="property-name-column">@property.Name</div>
                                        <div class="property-value-column">@property.Value</div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/js/product.js"></script>
    <script src="~/js/reviews.js"></script>
}